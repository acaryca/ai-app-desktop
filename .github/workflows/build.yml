name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Désactive la publication automatique pendant le build
      CSC_IDENTITY_AUTO_DISCOVERY: false
      EP_GITHUB_PUBLISH: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      # Étape pour générer les icônes avant la construction
      - name: Generate icons
        run: npm run make-icon
        
      # Solution directe pour l'icône Windows
      - name: Create Windows Icon with png-to-ico
        if: matrix.os == 'windows-latest'
        run: |
          npm install -g png-to-ico
          # Créer une icône Windows valide à partir du PNG
          png-to-ico app/icons/icon-256.png > app/icons/icon.ico
          # Vérifier que l'icône est valide
          if [ -f "app/icons/icon.ico" ] && [ -s "app/icons/icon.ico" ]; then
            echo "Icône Windows créée avec succès"
            ls -la app/icons/icon.ico
          else
            echo "Échec de création de l'icône Windows"
            exit 1
          fi
        shell: bash
        
      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run package:win -- --publish never
        
      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run package:mac -- --publish never
        
      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run package:linux -- --publish never
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/*.exe
          
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            dist/*.dmg
            dist/*.zip
            
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            dist-artifacts/windows-build/*
            dist-artifacts/macos-build/*
            dist-artifacts/linux-build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 